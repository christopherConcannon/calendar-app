body {
	font-family: 'Open Sans', sans-serif;
	font-size: 16px;
	line-height: 1;
}

textarea {
	background: transparent;
	border: none;
	resize: none;
	color: #000000;
	border-left: 1px solid black;
	padding: 10px;
}

.jumbotron {
	text-align: center;
	background-color: transparent;
	color: black;
	border-radius: 0;
	border-bottom: 10px solid black;
}

.container {
  padding-bottom: 5rem;
}

/* why do we need this class? the behavior and user agent style is the same for the textarea without it */
.description {
	white-space: pre-wrap;
}

/* what for? */
.time-block {
	text-align: center;
	border-radius: 15px;
}

/* why are they giving us this class?  textarea already has workable styles and adding this row class means the BS row classes get applied too which mess things up */
.row {
	white-space: pre-wrap;
	height: 80px;
	border-top: 1px solid white;
}

.hour {
	background-color: #ffffff;
  color: #000000;
  border: none;
  border-top: 1px dashed #000000;
  border-radius: 0;
  /* this works to fix variable widths due to 1 or 2 digit time, but is there a better way to do this leveraging flex/-basis/-grow/-shrink? */
  width: 4rem;
}

.past {
	background-color: #d3d3d3;
	color: #000000;
}

.present {
	background-color: #ff6961;
	color: #000000;
}

.future {
	background-color: #77dd77;
	color: #000000;
}

.saveBtn {
	border-left: 1px solid black;
	border-top-right-radius: 15px;
	border-bottom-right-radius: 15px;
	background-color: #06aed5;
	color: white;
	padding: 0 1.8rem;
}

.saveBtn i:hover {
	font-size: 20px;
	transition: all .3s ease-in-out;
}

/* CUSTOM STYLES */
.saveBtn i {
	font-size: .8rem;
}

.input-group:not(:first-child) textarea {
  border-top: 1px solid white;
}


@media screen and (max-width: 768px) {
  /* BOOTSTRAP OVERRIDE */
  .display-3 {
    font-size: 2.5rem;
  }
}

@media screen and (max-width: 576px) {
  .display-3 {
    font-size: 1.5rem;
  }
  #description {
    display: none;
  }
  .form-control {
    font-size: .6rem;
  }
  .hour {
    width: 2.5rem;
    font-size: .6rem;
  }
}

